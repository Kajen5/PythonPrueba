import threading\r\nimport time\r\n\r\n\r\ncondition = threading.Condition()\r\nready = False\r\n\r\nclass Person(threading.Thread):\r\n    def __init__(self):\r\n        threading.Thread.__init__(self)\r\n\r\n    def run(self):\r\n        global ready\r\n        condition.acquire()\r\n        while(not ready):\r\n            print(\"[%s] I'm waiting\" % time.strftime(\"%H:%M:%S\"))\r\n            condition.wait()\r\n            \r\n        print(\"[%s] Go CiberByte!\" % time.strftime(\"%H:%M:%S\"))\r\n        condition.notify()\r\n        condition.release()\r\n\r\nclass Car(threading.Thread): \r\n    def __init__(self):\r\n        threading.Thread.__init__(self)\r\n\r\n    def run(self):\r\n        global ready\r\n        condition.acquire()\r\n        for i in range(3):\r\n            time.sleep(1)\r\n\r\n        print(\"[%s] Car ready\" % time.strftime(\"%H:%M:%S\"))\r\n        ready = True\r\n        condition.notify()\r\n        condition.release()\r\n\r\nperson = Person()\r\ncar = Car()\r\n\r\nperson.start()\r\ncar.start()\r\n\r\nperson.join()\r\ncar.join()